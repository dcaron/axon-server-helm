replicaCount: 3

statefulset:
  enabled: true

image:
  repository: axoniq/axonserver
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart version.
  tag: "4.3.5"

config:
  serverDomain: nonprod.axon
  accessControl:
    enabled: false
    token: ~

java:
  jvmOptions:
    additionnalOptions: ~
    memoryOptions: "-XX:MinRAMPercentage=75 -XX:MaxRAMPercentage=85"
    memoryErrorOptions: "-XX:+ExitOnOutOfMemoryError -XX:+CrashOnOutOfMemoryError"
    timezoneOptions: "-Duser.timezone=UTC"
    networkingOptions: "-Dnetworkaddress.cache.ttl=0 -Dnetworkaddress.cache.negative.ttl=0"


imagePullSecrets: []

serviceAccount:
  create: true
  annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  gui:
    type: LoadBalancer
    port: 8024
  grpc:
    type: ClusterIP
    port: 8124

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
#   cloud.com/my-nodepool: axon-pool

tolerations: []

affinity: {}
